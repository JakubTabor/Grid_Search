# I gonna show some examples how to use GridSearchCV, on more complicated dataset and also check performance of some model and Neural Network
# First I load my dataset and pass columns for better description, class (g and h) are gamma and hadron
# Then I map my columns class into numeric variables, one for gamma and zero for hadron
# Next I gonna plot columns to see how my data is distributed, I can see very different distribution only in column "fAlpha"
# In other cases distribution is pretty much the same, with exception on "fLength", "fAsym" and "fM3Long"
# Now I gonna split my data into train, test and valid sets, I use for it numpy split, first shuffling samples
# First split will be on 60% of my data and next of 80% of my data, than I check size of my classes, I see that there is imbalance
# I gonna use over sampling method, so I import "RandomOverSampler", next I create function that will oversample my data and scale them
# So I create function "scale_dataset" and as arguments put (dataframe and oversample set to False), I gonna choose which sets I want to oversample
# I define X and y variables, which will be columns from my dataframe, y as the last and X as rest of them
# Now I create objects of my scaler, and use "fit_transform" of X variable to scale all columns
# Then I create object of class "RandomOverSampler" and use method "fit_resample" on X and y variables, I save it as X and y
# Next I need to stack my both variables and create new data of them 
# To do this I gonna use "numpy hstack", on X variable and y variable, but reshape into 2D object and save this operation as "data"  
# I gonna return from my function new "data", but also X and y
# Then I prepare train, valid and test sets, with use of my function "scale_dataset", for my train sets I set oversample 
# But for valid and test sets I set (oversample to False), because I want to measure performance of my model with this sets
# Now when I have my sets I can import some model to measure their performance on my dataset, it will be(svm, LogisticRegression, KNeighborsClassifier and GaussianNB)
# Then I import "GridSearchCV" which help me find the best parameters for my models
# So first I put name of my model, then models itself, with some parameters that I want to mesure 
# Next I put parameters, there are parameters that have the most significant impact on model performance
